generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  name        String
  surname     String
  phonenumber String   @unique
  profilePic  String   @default("")
  email       String   @unique
  password    String
  courses     String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CoursesCategory {
  id        String    @id @default(uuid())
  title     String
  shortName String
  thumbnail String
  goal      String
  lessons   Lessons[] @relation("CategoryLessons")
}

model Lessons {
  id                String          @id @default(uuid())
  title             String
  isDemo            Boolean         @default(false)
  videoUrl          String
  coursesCategoryId String
  quessions         Quessions[]     @relation("Quessions")
  dictonary         Dictonary[]     @relation("Dictonary")
  quizs             Quizs[]         @relation("Quizs")
  coursesCategory   CoursesCategory @relation("CategoryLessons", fields: [coursesCategoryId], references: [id])
}

model Quessions {
  id        String  @id @default(uuid())
  quession  String
  Lessons   Lessons @relation("Quessions", fields: [lessonsId], references: [id])
  lessonsId String
}

model Dictonary {
  id         String  @id @default(uuid())
  word       String
  translated String
  Lessons    Lessons @relation("Dictonary", fields: [lessonsId], references: [id])
  lessonsId  String
}

model Quizs {
  id        String    @id @default(uuid())
  quiz      String
  lessonsId String?
  options   Options[] @relation("Options")
  Lessons   Lessons?  @relation("Quizs", fields: [lessonsId], references: [id])
}

model Options {
  id            String @id @default(uuid())
  option1       String
  option2       String
  option3       String
  currentOption String
  quizsId       String
  Quizs         Quizs  @relation("Options", fields: [quizsId], references: [id])
}
